
task iosTest {
    group = JavaBasePlugin.VERIFICATION_GROUP
    dependsOn 'linkTestDebugExecutableIosX64'
    def device = project.findProperty("iosDevice")?.toString() ?: "iPhone XR"
    doLast {
        def binary = kotlin.targets.iosX64.binaries.getExecutable('test', 'DEBUG').outputFile
        exec {
            commandLine 'xcrun', 'simctl', 'spawn', device, binary.absolutePath
        }
    }
}

node {
    version = "10.9.0"
    download = true
    nodeModulesDir = file("$buildDir/npm")
}

task installMocha(type: NpmTask) {
    args = ["install", "mocha@6.0.0"]
}

def jsCompilations = kotlin.targets.js.compilations

task populateNodeModules {
    doLast {
        copy {
            from "$buildDir/npm/node_modules"
            from jsCompilations.main.output.allOutputs
            jsCompilations.test.runtimeDependencyFiles.each {
                if (it.exists() && !it.isDirectory()) {
                    from zipTree(it.absolutePath).matching { include '*.js' }
                }
            }
            into "$buildDir/node_modules"
        }
    }
}

task runMocha(type: NodeTask, dependsOn: [compileTestKotlinJs, installMocha, populateNodeModules]) {
    script = file("$buildDir/npm/node_modules/.bin/mocha")
    args = [
            "--timeout", "15000",
            relativePath(jsCompilations.test.output.allOutputs.first()) + "/${project.name}_test.js"
    ]
}

jsTest {
    dependsOn runMocha
}

task test(dependsOn: [jvmTest, iosTest, jsTest]) {
    group = JavaBasePlugin.VERIFICATION_GROUP
}

repositories.whenObjectAdded {
    if (it instanceof IvyArtifactRepository) {
        metadataSources {
            artifact()
        }
    }
}
